# Generated by Django 5.2 on 2025-05-10 16:17
# shop/migrations/0006_auto_20250510_1617.py
from django.db import migrations, models


def backfill_tipo(apps, schema_editor):
    TipoUsuario = apps.get_model('shop', 'TipoUsuario')
    UsuarioProfile = apps.get_model('shop', 'UsuarioProfile')
    # Buscamos por "nombre" porque TipoUsuario no tiene slug
    try:
        cliente = TipoUsuario.objects.get(nombre='cliente')
    except TipoUsuario.DoesNotExist:
        cliente = TipoUsuario.objects.first()
    for perfil in UsuarioProfile.objects.filter(tipo_usuario__isnull=True):
        perfil.tipo_usuario = cliente
        perfil.save(update_fields=['tipo_usuario'])


def get_default_tipo(apps, schema_editor):
    TipoUsuario = apps.get_model('shop', 'TipoUsuario')
    # Mismo criterio: devolvemos la PK de "cliente" o la primera
    try:
        return TipoUsuario.objects.get(nombre='cliente').pk
    except TipoUsuario.DoesNotExist:
        return TipoUsuario.objects.first().pk


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0005_auto_20250510_1615'),
    ]

    operations = [
        # 1) Rellenamos perfiles sin tipo
        migrations.RunPython(backfill_tipo),
        # 2) Forzamos tipo_usuario no-nulo, con default correcto
        migrations.AlterField(
            model_name='usuarioprofile',
            name='tipo_usuario',
            field=models.ForeignKey(
                'shop.TipoUsuario',
                on_delete=models.PROTECT,
                default=get_default_tipo,
            ),
        ),
    ]
